@prefix : <#> .
@prefix gsm: <http://tok450s.lan:8080/ldbbc/gsm-vocab.ttl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix sparql-result: <http://www.w3.org/2005/sparql-results#> .
@prefix http: <http://www.w3.org/2011/http#>.
@prefix http_m: <http://www.w3.org/2011/http-methods#>.

@prefix :       <http://tok450s.lan:8080/ldbbc/> .

@prefix this: <http://this.nxparser.github.io/reference/to/URI/of/current/rdf/graph/for/representing/permanently/relative/URIs/in/N-Triples/#> .
@prefix tmp:    <http://tok450s.lan:8080/ldbbc/> .
@prefix tmp_ha: <http://tok450s.lan:8080/ldbbc/#> . # because we cannot parse local names with 0 or 1 letter
@prefix webserver: <http://tok450s.lan:8080/ldbbc/> .


# Setup Workflow Instances() 
{ 
    ?stageInstance a gsm:StageInstance ;
                gsm:hasState gsm:uninitialized ;
                gsm:isInstanceOf ?stageModel . 
}
=>
{
    _:h3 http:mthd http_m:PUT ; 
        http:requestURI ?stageInstance ; 
        http:body { 
            this:it gsm:isInstanceOf ?stageModel ;
                a gsm:StageInstance ;
                gsm:hasState gsm:active ;
                gsm:isSuperStageInstance "true"^^xsd:boolean .
        } .
} .

# Setup Stage Instances
{ 
    ?stageInstance a gsm:StageInstance ;
                gsm:hasState gsm:uninitialized ;
                gsm:isInstanceOf ?stageModel . 
    ?stageModel gsm:hasDescendantStage ?descendantStageModel .
}
=>
{
    _:h1 http:mthd http_m:POST ; 
        http:requestURI <http://tok450s.lan:8080/ldbbc/> ; 
        http:body {
            this:StageInstance gsm:isInstanceOf ?descendantStageModel ;
            gsm:inSuperStageInstance ?stageInstance ;
            gsm:hasState gsm:inactive .
        } . 
} .

# Setup Task Instances
{ 
    ?stageInstance a gsm:StageInstance ;
                gsm:hasState gsm:uninitialized ;
                gsm:isInstanceOf ?stageModel . 
    ?stageModel gsm:hasDescendantStage ?descendantStageModel .
    ?stageModel gsm:hasTask ?task .
}
=>
{
    _:h2 http:mthd http_m:POST ; 
        http:requestURI <http://tok450s.lan:8080/ldbbc/> ; 
        http:body { 
            this:TaskInstance gsm:isInstanceOf ?task ;
            gsm:inSuperStageInstance ?stageInstance ;
            # UI modifications
            gsm:forStageModel ?descendantStageModel .
        } .
    
} .
# Setup Milestone Instances
{ 
    ?stageInstance a gsm:StageInstance ;
                gsm:hasState gsm:uninitialized ;
                gsm:isInstanceOf ?stageModel . 
    ?stageModel gsm:hasDescendantStage ?descendantStageModel .
    ?descendantStageModel gsm:hasMilestoneModel ?milestoneModel .
}
=>
{
    _:h2 http:mthd http_m:POST ; 
        http:requestURI <http://tok450s.lan:8080/ldbbc/> ; 
        http:body { 
            this:MilestoneInstance gsm:isInstanceOf ?milestoneModel ;
            gsm:isAchieved "false"^^xsd:boolean ;
            gsm:inSuperStageInstance ?stageInstance ;
            # UI modifications
            gsm:forStageModel ?descendantStageModel .
        } .
} .


# get precondition data
{
    ?where  sp:subject          ?subject .
}
=>
{
    _:h     http:mthd               http_m:GET; 
            http:requestURI         ?subject .
} .


  
# Set executed task to done
#{
#    ?wfInstance gsm:isInstanceOf ?wfModel .
#    ?wfModel gsm:containsStageModel ?stageModel .
#    ?stageInstance gsm:isInstanceOf ?stageModel ;
#                    gsm:hasState gsm:triggered .
#    ?stageModel gsm:hasTask ?task .
#} 
#=> 
#{
#    _:h2    http:mthd http_m:PUT ;
#            http:requestURI ?stageInstance ;
#            http:body {
#                ?stageInstance gsm:isInstanceOf ?stageModel ;
#                gsm:hasState gsm:running ;
#                gsm:inWorkflowInstance ?wfInstance ;
#                # UI modifications
#                gsm:forStageModel ?stageModel .
#            } .
#} .


# FCR-1 transitive helper


{
    ?superStageInstance gsm:isSuperStageInstance "true"^^xsd:boolean ;
        gsm:hasState gsm:active ;
        gsm:isInstanceOf ?stageModel .

    ?stageModel gsm:hasChildStage ?childStageModel .
    ?childStageInstance gsm:isInstanceOf ?childStageModel .
} => {
    ?childStageInstance gsm:allAncestorsActive "true"^^xsd:boolean .
} . 

{
    ?stageInstance gsm:allAncestorsActive  "true"^^xsd:boolean ;
        gsm:hasState gsm:active ;
        gsm:isInstanceOf ?stageModel .

    ?stageModel 
       gsm:hasChildStage ?childStageModel .
    ?childStageInstance gsm:isInstanceOf ?childStageModel .
} => { 
    ?childStageInstance gsm:allAncestorsActive "true"^^xsd:boolean . 
} .


# FCR-1
{
    # Basis
    ?superStageInstance gsm:isSuperStageInstance "true"^^xsd:boolean .
    ?stageInstance gsm:inSuperStageInstance ?superStageInstance ;
                    gsm:isInstanceOf ?stageModel .
    ?stageModel gsm:hasGuard ?guard .

    # Prerequisite
    ?stageInstance gsm:allAncestorsActive "true"^^xsd:boolean ;
                gsm:hasState gsm:inactive .

    # Antecedent
    ?guard gsm:hasCondition ?sentry .
    ?sentry sparql-result:boolean "true"^^xsd:boolean .

    # -------- all milestones have to be archived / 'and' is supposed but not prooven
    #?guard gsm:hasMilestoneModel ?milestoneModel .
    #?milestoneInstance gsm:isInstanceOf ?milestoneModel ;
    #                    gsm:isAchieved "true"^^xsd:boolean .
} 
=> 
{
    # Consequent
    _:h http:mthd http_m:PUT ; 
        http:requestURI ?stageInstance ; 
        http:body {
            ?stageInstance gsm:isInstanceOf ?stageModel ;
            gsm:hasState gsm:active ;
            gsm:inSuperStageInstance ?superStageInstance .
        } . 
} .

# execute active tasks
# we need this rule for every supported kind of http method
# (PUT, POST at least), see annotation below
# 
{

    # Basis
    ?superStageInstance gsm:isSuperStageInstance "true"^^xsd:boolean .
    ?stageInstance gsm:inSuperStageInstance ?superStageInstance ;
                    gsm:isInstanceOf ?stageModel .
    ?stageModel gsm:hasGuard ?guard ;
                gsm:hasTask ?task .

    # Prerequisite
    ?stageInstance gsm:allAncestorsActive "true"^^xsd:boolean ;
                    gsm:hasState gsm:inactive .

    # Antecedent
    ?guard gsm:hasCondition ?sentry .
    ?sentry sparql-result:boolean "true"^^xsd:boolean .

    ?task gsm:hasHttpRequest ?httpRequest .

    ?httpRequest http:mthd ?httpMthd ;
                http:requestURI ?httpUri ;
                http:body ?httpBody .
} 
=> 
{
    _:h     http:mthd http_m:POST ;  # ?httpMthd breaks ldfu...
            http:requestURI ?httpUri ; 
            http:body ?httpBody . 

} .

# FCR-2
# set milestone achieved
{

    # Basis
    ?superStageInstance gsm:isSuperStageInstance "true"^^xsd:boolean .
    ?stageInstance gsm:inSuperStageInstance ?superStageInstance ;
                    gsm:isInstanceOf ?stageModel .
    
    ?stageModel gsm:hasMilestoneModel ?milestoneModel .
    ?milestoneModel gsm:hasValidatingSentry ?sentry .
    ?milestoneInstance gsm:isInstanceOf ?milestoneModel .

    # Prerequisite
    ?stageInstance gsm:hasState gsm:active .

    # Antecedent
    ?sentry sparql-result:boolean "true"^^xsd:boolean .
}
=>
{
    # Consequent
    _:h http:mthd http_m:PUT ; 
        http:requestURI ?milestoneInstance ; 
        http:body {
            ?milestoneInstance gsm:isInstanceOf ?milestoneModel ;
            gsm:isAchieved "true"^^xsd:boolean ;
            gsm:inSuperStageInstance ?superStageInstance ;
            # UI modifications
            gsm:forStageModel ?stageModel .
        } . 
} .

# FCR-3
# reset milestone
{
     # Basis
    ?superStageInstance gsm:isSuperStageInstance "true"^^xsd:boolean .
    ?stageInstance gsm:inSuperStageInstance ?superStageInstance ;
                    gsm:isInstanceOf ?stageModel .
    ?stageModel gsm:hasMilestoneModel ?milestoneModel .
    ?milestoneModel gsm:hasInvalidatingSentry ?sentry .
    ?milestoneInstance gsm:isInstanceOf ?milestoneModel .

    # Prerequisite
    ?milestoneInstance gsm:isAchieved "true"^^xsd:boolean .

    # Antecedent
    ?sentry sparql-result:boolean "true"^^xsd:boolean .
}
=>
{
    # Consequent
    _:h http:mthd http_m:PUT ; 
        http:requestURI ?milestoneInstance ; 
        http:body {
            ?milestoneInstance gsm:isInstanceOf ?milestoneModel ;
            gsm:isAchieved "false"^^xsd:boolean ;
            gsm:inSuperStageInstance ?superStageInstance ;
            # UI modifications
            gsm:forStageModel ?stageModel .
        } . 
} .

# FCR-3/2
{
    # Basis
    ?superStageInstance gsm:isSuperStageInstance "true"^^xsd:boolean .
    ?stageInstance gsm:inSuperStageInstance ?superStageInstance ;
                    gsm:isInstanceOf ?stageModel .
    ?stageModel gsm:hasMilestoneModel ?milestoneModel .
    ?stageInstance gsm:isInstanceOf ?stageModel .
    ?milestoneModel gsm:hasInvalidatingSentry ?sentry .
    ?milestoneInstance gsm:isInstanceOf ?milestoneModel .

    # Prerequisite
    ?milestoneInstance gsm:isAchieved "true"^^xsd:boolean .

    # Antecedent
    ?sentry sparql-result:boolean "true"^^xsd:boolean .
}
=>
{
    # Consequent
    _:h http:mthd http_m:PUT ; 
        http:requestURI ?stageInstance ; 
        http:body {
            ?stageInstance gsm:isInstanceOf ?stageModel ;
                gsm:hasState gsm:inactive ;
                gsm:inSuperStageInstance ?superStageInstance ;
            
            # UI modification
                gsm:forStageModel ?stageModel .
        } . 
} .

# FCR-3/3
# reset OTHER milestones of the stage
{

    # Basis
    ?superStageInstance gsm:isSuperStageInstance "true"^^xsd:boolean .
    ?stageInstance gsm:inSuperStageInstance ?superStageInstance ;
                    gsm:isInstanceOf ?stageModel .
    ?stageModel gsm:hasMilestoneModel ?milestoneModel .
    ?milestoneModel gsm:hasInvalidatingSentry ?sentry .
    ?milestoneInstance gsm:isInstanceOf ?milestoneModel .

    # Prerequisite
    ?milestoneInstance gsm:isAchieved "true"^^xsd:boolean .

    # Antecedent
    ?sentry sparql-result:boolean "true"^^xsd:boolean .

    # Addition
    ?milestoneInstance gsm:forStageModel ?stageModelOfInstance .
    ?stageModelOfInstance gsm:hasMilestoneModel ?otherMilestoneModel .
    ?otherMilestoneInstance gsm:isInstanceOf ?otherMilestoneModel ;
                            gsm:isAchieved "true"^^xsd:boolean .
}
=>
{
    # Consequent
    _:h http:mthd http_m:PUT ; 
        http:requestURI ?otherMilestoneInstance ; 
        http:body {
            ?otherMilestoneInstance gsm:isInstanceOf ?otherMilestoneModel ;
            gsm:isAchieved "false"^^xsd:boolean ;
            gsm:inSuperStageInstance ?superStageInstance ;
            # UI modifications
            gsm:forStageModel ?stageModel .
        } . 
} .

# FCR-5 set state done
{
    # Basis
    ?superStageInstance gsm:isSuperStageInstance "true"^^xsd:boolean .
    ?stageInstance gsm:inSuperStageInstance ?superStageInstance ;
                    gsm:isInstanceOf ?stageModel .
    
    ?stageModel gsm:hasMilestoneModel ?milestoneModel .
    ?milestoneModel gsm:hasValidatingSentry ?sentry .
    ?milestoneInstance gsm:isInstanceOf ?milestoneModel .

    # Prerequisite
    ?stageInstance gsm:hasState gsm:active .

    # Antecedent
    ?sentry sparql-result:boolean "true"^^xsd:boolean .
}
=>
{
    # Consequent
    _:h http:mthd http_m:PUT ; 
        http:requestURI ?stageInstance ; 
        http:body {
            ?stageInstance gsm:isInstanceOf ?stageModel ;
                gsm:hasState gsm:done ;
                gsm:inSuperStageInstance ?superStageInstance .
        } . 
} .

# FCR-6 
# Reset all child stages' states (done -> inactive)  (traversing)
{
    # Basis
    ?superStageInstance gsm:isSuperStageInstance "true"^^xsd:boolean .
    ?stageInstance gsm:inSuperStageInstance ?superStageInstance ;
                    gsm:isInstanceOf ?stageModel .
    ?stageModel gsm:hasMilestoneModel ?milestoneModel .
    ?milestoneModel gsm:hasInvalidatingSentry ?sentry .
    ?milestoneInstance gsm:isInstanceOf ?milestoneModel .

    # Prerequisite
    ?milestoneInstance gsm:isAchieved "true"^^xsd:boolean .

    # Antecedent
    ?sentry sparql-result:boolean "true"^^xsd:boolean .

    # Addition
    ?stageModel gsm:hasDescendantStage ?descendantStageModel .
    ?descendantStageInstance gsm:isInstanceOf ?descendantStageModel .
}
=>
{
    # Consequent
    _:h http:mthd http_m:PUT ; 
        http:requestURI ?descendantStageInstance ; 
        http:body {
            ?descendantStageInstance gsm:isInstanceOf ?descendantStageModel ;
                gsm:hasState gsm:inactive ;
                gsm:inSuperStageInstance ?superStageInstance ;
         
            # UI modification
                gsm:forStageModel ?descendantStageModel .
        } . 
} .

# Reset all milestones' states of all child stages (achieved -> unachieved) (traversing)
{
    # Basis
    ?superStageInstance gsm:isSuperStageInstance "true"^^xsd:boolean .
    ?stageInstance gsm:inSuperStageInstance ?superStageInstance ;
                    gsm:isInstanceOf ?stageModel .
    ?stageModel gsm:hasMilestoneModel ?milestoneModel .
    ?milestoneModel gsm:hasInvalidatingSentry ?sentry .
    ?milestoneInstance gsm:isInstanceOf ?milestoneModel .

    # Prerequisite
    ?milestoneInstance gsm:isAchieved "true"^^xsd:boolean .

    # Antecedent
    ?sentry sparql-result:boolean "true"^^xsd:boolean .

    # Addition
    ?stageModel gsm:hasDescendantStage ?descendantStageModel .

    ?descendantStageModel gsm:hasMilestoneModel ?otherMilestoneModel .
    ?otherMilestoneInstance gsm:isInstanceOf ?otherMilestoneModel ;
                            gsm:isAchieved "true"^^xsd:boolean .
}
=>
{
    # Consequent
    _:h http:mthd http_m:PUT ; 
        http:requestURI ?otherMilestoneInstance ; 
        http:body {
            ?otherMilestoneInstance gsm:isInstanceOf ?otherMilestoneModel ;
            gsm:isAchieved "false"^^xsd:boolean ;
            gsm:inSuperStageInstance ?superStageInstance ;
            # UI modifications
            gsm:forStageModel ?descendantStageModel .
        } . 
} .

# reset OTHER milestones of the stage
{

    # Basis
    ?superStageInstance gsm:isSuperStageInstance "true"^^xsd:boolean .
    ?stageInstance gsm:inSuperStageInstance ?superStageInstance ;
                    gsm:isInstanceOf ?stageModel .
    ?stageModel gsm:hasMilestoneModel ?milestoneModel .
    ?milestoneModel gsm:hasInvalidatingSentry ?sentry .
    ?milestoneInstance gsm:isInstanceOf ?milestoneModel .

    # Prerequisite
    ?milestoneInstance gsm:isAchieved "true"^^xsd:boolean .

    # Antecedent
    ?sentry sparql-result:boolean "true"^^xsd:boolean .

    # Addition
    ?milestoneInstance gsm:forStageModel ?stageModelOfInstance .
    ?stageModelOfInstance gsm:hasMilestoneModel ?otherMilestoneModel .
    ?otherMilestoneInstance gsm:isInstanceOf ?otherMilestoneModel ;
                            gsm:isAchieved "true"^^xsd:boolean .
}
=>
{
    # Consequent
    _:h http:mthd http_m:PUT ; 
        http:requestURI ?otherMilestoneInstance ; 
        http:body {
            ?otherMilestoneInstance gsm:isInstanceOf ?otherMilestoneModel ;
            gsm:isAchieved "false"^^xsd:boolean ;
            gsm:inSuperStageInstance ?superStageInstance ;
            # UI modifications
            gsm:forStageModel ?stageModel .
        } . 
} .