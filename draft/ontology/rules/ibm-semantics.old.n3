@prefix : <#> .
@prefix ibm: <http://tok450s.lan:8080/ldbbc/ibm-vocab.ttl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix sparql-result: <http://www.w3.org/2005/sparql-results#> .
@prefix http: <http://www.w3.org/2011/http#>.
@prefix http_m: <http://www.w3.org/2011/http-methods#>.

@prefix :       <http://tok450s.lan:8080/ldbbc/> .

@prefix this: <http://this.nxparser.github.io/reference/to/URI/of/current/rdf/graph/for/representing/permanently/relative/URIs/in/N-Triples/#> .
@prefix tmp:    <http://tok450s.lan:8080/ldbbc/> .
@prefix tmp_ha: <http://tok450s.lan:8080/ldbbc/#> . # because we cannot parse local names with 0 or 1 letter
@prefix webserver: <http://tok450s.lan:8080/ldbbc/> .


{ ?WfInstance a ibm:WorkflowInstance ; ibm:hasState ibm:uninitialized ; ibm:isInstanceOf ?td . }
=>
{ _:h http:mthd http_m:GET ; http:requestURI ?td . } . 

{ ?WfInstance a ibm:WorkflowInstance ; ibm:hasState ibm:initialized ; ibm:isInstanceOf ?td . }
=>
{ _:h http:mthd http_m:GET ; http:requestURI ?td . } . 

{ ?WfInstance a ibm:WorkflowInstance ; ibm:hasState ibm:active ; ibm:isInstanceOf ?td . }
=>
{ _:h http:mthd http_m:GET ; http:requestURI ?td . } . 

# Setup Workflow Instances() 
{ 
    ?WfInstance a ibm:WorkflowInstance ;
                ibm:hasState ibm:uninitialized ;
                ibm:isInstanceOf ?WfModel . 
}
=>
{
    _:h3 http:mthd http_m:PUT ; 
        http:requestURI ?WfInstance ; 
        http:body { 
            this:it ibm:isInstanceOf ?WfModel ;
            ibm:hasState ibm:active . 
        } .
} .

# Setup Stage Instances
{ 
    ?WfInstance a ibm:WorkflowInstance ;
                ibm:hasState ibm:uninitialized ;
                ibm:isInstanceOf ?WfModel . 
    ?WfModel ibm:containsStageModel ?stageModel .
}
=>
{
    _:h1 http:mthd http_m:POST ; 
        http:requestURI <http://tok450s.lan:8080/ldbbc/> ; 
        http:body {
            this:StageInstance ibm:isInstanceOf ?stageModel ;
            ibm:hasState ibm:inactive ;
            ibm:inWorkflowInstance ?WfInstance . 
        } . 
} .

# Setup Task Instances
{ 
    ?WfInstance a ibm:WorkflowInstance ;
                ibm:hasState ibm:uninitialized ;
                ibm:isInstanceOf ?WfModel . 
                ?WfModel ibm:containsStageModel ?stageModel .
                ?stageModel ibm:hasTaskModel ?taskModel .
}
=>
{
    _:h2 http:mthd http_m:POST ; 
        http:requestURI <http://tok450s.lan:8080/ldbbc/> ; 
        http:body { 
            this:TaskInstance ibm:isInstanceOf ?taskModel ;
            ibm:inWorkflowInstance ?WfInstance ;
            # UI modifications
            ibm:forStageModel ?stageModel .
        } .
    
} .
# Setup Milestone Instances
{ 
    ?WfInstance a ibm:WorkflowInstance ;
                ibm:hasState ibm:uninitialized ;
                ibm:isInstanceOf ?WfModel . 
    ?WfModel ibm:containsStageModel ?stageModel .
    ?stageModel ibm:hasMilestoneModel ?milestoneModel .
}
=>
{
    _:h2 http:mthd http_m:POST ; 
        http:requestURI <http://tok450s.lan:8080/ldbbc/> ; 
        http:body { 
            this:MilestoneInstance ibm:isInstanceOf ?milestoneModel ;
            ibm:hasState ibm:unachieved ;
            ibm:inWorkflowInstance ?WfInstance ;
            # UI modifications
            ibm:forStageModel ?stageModel .
        } .
} .


# get precondition data
{
    ?where  sp:subject          ?subject .
}
=>
{
    _:h     http:mthd               http_m:GET; 
            http:requestURI         ?subject .
} .

# execute active tasks
# we need this rule for every supported kind of http method
# (PUT, POST at least), see annotation below
# 
{
    ?wfInstance ibm:isInstanceOf ?wfModel .
    ?wfModel ibm:containsStageModel ?stageModel .
    ?stageInstance ibm:isInstanceOf ?stageModel ;
                    ibm:hasState ibm:triggered .
    ?stageModel ibm:hasTaskModel ?taskModel .

    ?taskModel ibm:hasHttpRequest ?httpRequest .

    ?httpRequest http:mthd ?httpMthd ;
                http:requestURI ?httpUri ;
                http:body ?httpBody .
} 
=> 
{
    _:h     http:mthd http_m:POST ;  # ?httpMthd breaks ldfu...
            http:requestURI ?httpUri ; 
            http:body ?httpBody . 

} .
  
# Set executed task to done
{
    ?wfInstance ibm:isInstanceOf ?wfModel .
    ?wfModel ibm:containsStageModel ?stageModel .
    ?stageInstance ibm:isInstanceOf ?stageModel ;
                    ibm:hasState ibm:triggered .
    ?stageModel ibm:hasTaskModel ?taskModel .
} 
=> 
{
    _:h2    http:mthd http_m:PUT ;
            http:requestURI ?stageInstance ;
            http:body {
                ?stageInstance ibm:isInstanceOf ?stageModel ;
                ibm:hasState ibm:running ;
                ibm:inWorkflowInstance ?wfInstance ;
                # UI modifications
                ibm:forStageModel ?stageModel .
            } .
} .

# FCR-1

{
    # Basis
    ?wfInstance ibm:isInstanceOf ?wfModel .
    ?wfModel ibm:containsStageModel ?stageModel .
    ?stageModel ibm:hasGuard ?guard .

    # Prerequisite
    ?stageInstance ibm:isInstanceOf ?stageModel .
    ?stageInstance ibm:hasState ibm:inactive .

    # Antecedent
    ?guard ibm:hasCondition ?sentry .
    ?sentry sparql-result:boolean "true"^^xsd:boolean .
    ?wfInstance ibm:hasState ibm:active .
} 
=> 
{
    # Consequent
    _:h http:mthd http_m:PUT ; 
        http:requestURI ?stageInstance ; 
        http:body {
            ?stageInstance ibm:isInstanceOf ?stageModel ;
            ibm:hasState ibm:triggered ;
            ibm:inWorkflowInstance ?wfInstance .
        } . 
} .

# PAC-2
# set milestone achieved
{
    # Basis
    ?wfInstance ibm:isInstanceOf ?wfModel .
    ?wfModel ibm:containsStageModel ?stageModel .
    ?stageModel ibm:hasMilestoneModel ?milestoneModel .
    ?milestoneModel ibm:hasValidatingSentry ?sentry .
    ?milestoneInstance ibm:isInstanceOf ?milestoneModel .

    # Prerequisite
    ?stageInstance ibm:isInstanceOf ?stageModel ;
                    ibm:hasState ibm:running .

    # Antecedent
    ?sentry sparql-result:boolean "true"^^xsd:boolean .
}
=>
{
    # Consequent
    _:h http:mthd http_m:PUT ; 
        http:requestURI ?milestoneInstance ; 
        http:body {
            ?milestoneInstance ibm:isInstanceOf ?milestoneModel ;
            ibm:hasState ibm:achieved ;
            ibm:inWorkflowInstance ?wfInstance ;
            # UI modifications
            ibm:forStageModel ?stageModel .
        } . 
} .
# set stage done
{
    # Basis
    ?wfInstance ibm:isInstanceOf ?wfModel .
    ?wfModel ibm:containsStageModel ?stageModel .
    ?stageModel ibm:hasMilestoneModel ?milestoneModel .
    ?milestoneModel ibm:hasValidatingSentry ?sentry .
    ?milestoneInstance ibm:isInstanceOf ?milestoneModel .

    # Prerequisite
    ?stageInstance ibm:isInstanceOf ?stageModel ;
                    ibm:hasState ibm:running .

    # Antecedent
    ?sentry sparql-result:boolean "true"^^xsd:boolean .
}
=>
{
    # Consequent
    _:h http:mthd http_m:PUT ; 
        http:requestURI ?stageInstance ; 
        http:body {
            ?stageInstance ibm:isInstanceOf ?stageModel ;
            ibm:hasState ibm:done ;
            ibm:inWorkflowInstance ?wfInstance .
        } . 
} .


# PAC-3
# reset milestone
{
    # Basis
    ?wfInstance ibm:isInstanceOf ?wfModel .
    ?wfModel ibm:containsStageModel ?stageModel .
    ?stageModel ibm:hasMilestoneModel ?milestoneModel .
    ?milestoneModel ibm:hasInvalidatingSentry ?sentry .
    ?milestoneInstance ibm:isInstanceOf ?milestoneModel .

    # Prerequisite
    ?milestoneInstance ibm:hasState ibm:achieved .

    # Antecedent
    ?sentry sparql-result:boolean "true"^^xsd:boolean .
}
=>
{
    # Consequent
    _:h http:mthd http_m:PUT ; 
        http:requestURI ?milestoneInstance ; 
        http:body {
            ?milestoneInstance ibm:isInstanceOf ?milestoneModel ;
            ibm:hasState ibm:unachieved ;
            ibm:inWorkflowInstance ?wfInstance ;
            # UI modifications
            ibm:forStageModel ?stageModel .
        } . 
} .

# reset OTHER milestones of the stage
{
    # Basis
    ?wfInstance ibm:isInstanceOf ?wfModel .
    ?wfModel ibm:containsStageModel ?stageModel .
    ?stageModel ibm:hasMilestoneModel ?milestoneModel .
    ?milestoneModel ibm:hasInvalidatingSentry ?sentry .
    ?milestoneInstance ibm:isInstanceOf ?milestoneModel .

    # Prerequisite
    ?milestoneInstance ibm:hasState ibm:achieved .

    # Antecedent
    ?sentry sparql-result:boolean "true"^^xsd:boolean .

    # Addition
    ?milestoneInstance ibm:forStageModel ?stageModelOfInstance .
    ?stageModelOfInstance ibm:hasMilestoneModel ?otherMilestoneModel .
    ?otherMilestoneInstance ibm:isInstanceOf ?otherMilestoneModel ;
                            ibm:hasState ibm:achieved .
}
=>
{
    # Consequent
    _:h http:mthd http_m:PUT ; 
        http:requestURI ?otherMilestoneInstance ; 
        http:body {
            ?otherMilestoneInstance ibm:isInstanceOf ?otherMilestoneModel ;
            ibm:hasState ibm:unachieved ;
            ibm:inWorkflowInstance ?wfInstance ;
            # UI modifications
            ibm:forStageModel ?stageModel .
        } . 
} .

# reset stage
{
    # Basis
    ?wfInstance ibm:isInstanceOf ?wfModel .
    ?wfModel ibm:containsStageModel ?stageModel .
    ?stageModel ibm:hasMilestoneModel ?milestoneModel .
    ?stageInstance ibm:isInstanceOf ?stageModel .
    ?milestoneModel ibm:hasInvalidatingSentry ?sentry .
    ?milestoneInstance ibm:isInstanceOf ?milestoneModel .

    # Prerequisite
    ?milestoneInstance ibm:hasState ibm:achieved .

    # Antecedent
    ?sentry sparql-result:boolean "true"^^xsd:boolean .
}
=>
{
    # Consequent
    _:h http:mthd http_m:PUT ; 
        http:requestURI ?stageInstance ; 
        http:body {
            ?stageInstance ibm:isInstanceOf ?stageModel ;
            ibm:hasState ibm:inactive ;
            ibm:inWorkflowInstance ?wfInstance ;
            # UI modification
            ibm:forStageModel ?stageModel .
        } . 
} .

# PAC-4
#{
#    # Basis
#    ?wfInstance ibm:isInstanceOf ?wfModel .
#    ?wfModel ibm:containsStageModel ?stageModel .
#    ?stageModel ibm:hasMilestoneModel ?milestoneModel ;
#            ibm:hasGuard ?guard .
#    
#    # Prerequisite
#    ?milestoneInstance ibm:isInstanceOf ?milestoneModel ;
#                        ibm:hasState ibm:active .
#
#    # Antecedent
#    ?guard ibm:hasCondition ?sentry .
#    ?sentry sparql-result:boolean "true"^^xsd:boolean .
#    ?wfInstance ibm:hasState ibm:active .
#} 
#=>
#{
#    # Consequent
#    _:h http:mthd http_m:PUT ; 
#        http:requestURI ?milestoneInstance ; 
#        http:body {
#            ?milestoneInstance ibm:isInstanceOf ?milestoneModel ;
#            ibm:hasState ibm:inactive ;
#            ibm:inWorkflowInstance ?wfInstance .
#        } .
#} .

# PAC-5
#{
#    # Basis
#    ?wfInstance ibm:isInstanceOf ?wfModel .
#    ?wfModel ibm:containsStageModel ?stageModel .
#    ?stageModel ibm:hasMilestoneModel ?milestoneModel .
#    ?milestoneInstance ibm:isInstanceOf ?milestoneModel .

#    # Prerequisite
#    ?stageInstance ibm:isInstanceOf ?stageModel ;
#                    ibm:hasState ibm:running .
#
#    # Antecedent
#    ?milestoneInstance ibm:hasState ibm:achieved .
#}
#=>
#{
#    # Consequent
#    _:h http:mthd http_m:PUT ; 
#       http:requestURI ?stageInstance ; 
#        http:body {
#            ?stageInstance ibm:isInstanceOf ?stageModel ;
#            ibm:hasState ibm:done ;
#            ibm:inWorkflowInstance ?wfInstance .
#        } . 
#} .

# PAC-6
{
    # Basis
    ?wfInstance ibm:isInstanceOf ?wfModel .
    ?wfModel ibm:containsStageModel ?stageModel .

    # Prerequisite
    ?stageInstance ibm:isInstanceOf ?stageModel .
    ?stageInstance ibm:hasState ibm:active .

    # Antecedent
    ?wfInstance ibm:hasState ibm:inactive .
}
=>
{
    # Consequent
    _:h http:mthd http_m:PUT ; 
        http:requestURI ?stageInstance ; 
        http:body {
            ?stageInstance ibm:isInstanceOf ?stageModel ;
            ibm:hasState ibm:inactive ;
            ibm:inWorkflowInstance ?wfInstance .
        } . 
} .