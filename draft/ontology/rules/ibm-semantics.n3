@prefix : <#> .
@prefix ibm: <http://localhost/ldbbc/ibm-vocab.ttl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix sparql-result: <http://www.w3.org/2005/sparql-results#> .
@prefix http: <http://www.w3.org/2011/http#>.
@prefix http_m: <http://www.w3.org/2011/http-methods#>.

@prefix :       <http://localhost/ldbbc/> .

@prefix this: <http://this.nxparser.github.io/reference/to/URI/of/current/rdf/graph/for/representing/permanently/relative/URIs/in/N-Triples/#> .
@prefix tmp:    <http://localhost/ldbbc/> .
@prefix tmp_ha: <http://localhost/ldbbc/#> . # because we cannot parse local names with 0 or 1 letter
@prefix webserver: <http://localhost/ldbbc/> .


{ ?WfInstance a ibm:WorkflowInstance ; ibm:hasState ibm:uninitialized ; ibm:isInstanceOf ?td . }
=>
{ _:h http:mthd http_m:GET ; http:requestURI ?td . } . 

{ ?WfInstance a ibm:WorkflowInstance ; ibm:hasState ibm:initialized ; ibm:isInstanceOf ?td . }
=>
{ _:h http:mthd http_m:GET ; http:requestURI ?td . } . 

{ ?WfInstance a ibm:WorkflowInstance ; ibm:hasState ibm:active ; ibm:isInstanceOf ?td . }
=>
{ _:h http:mthd http_m:GET ; http:requestURI ?td . } . 

# Setup Workflow Instances() 
{ 
    ?WfInstance a ibm:WorkflowInstance ;
                ibm:hasState ibm:uninitialized ;
                ibm:isInstanceOf ?WfModel . 
                ?WfModel ibm:containsStageModel ?stage .
                ?stage ibm:hasTaskModel ?taskModel .
}
=>
{
    _:h http:mthd http_m:POST ; 
        http:requestURI <http://localhost/ldbbc/> ; 
        http:body {
            ?WfInstance ibm:isInstanceOf ?stage ;
            ibm:hasState ibm:initialized ;
            ibm:inWorkflowInstance ?WfInstance . 
        } . 
    _:h http:mthd http_m:POST ; 
        http:requestURI <http://localhost/ldbbc/> ; 
        http:body { 
            ?WfInstance ibm:isInstanceOf ?taskModel ;
            ibm:hasState ibm:initialized ;
            ibm:inWorkflowInstance ?WfInstance . 
        } .
} .



# get precondition data

{
    ?where  sp:subject          ?subject .
}
=>
{
    _:h     http:mthd               http_m:GET; 
            http:requestURI         ?subject .
} .

# check preconditions

{
    ?stage ibm:hasGuards        ?guard .
    ?guard ibm:hasPreCondition  ?sentry .
    ?sentry sparql-result:boolean "true"^^xsd:boolean .
}
=>
{   
    ?stage ibm:hasState ibm:active . 
} .


# execute stages

#1
{
    ?stage      ibm:hasState        ibm:active ;
                ibm:hasTask         ?task .
    ?task       ibm:hasAction       ?action .
    ?action     ibm:hasHttpRequest  ?request .
    #    ibm:hasHttpRequest ?request .
    ?request    http:mthd           http_m:POST ; 
                http:requestURI     ?uri ; 
                http:body           ?body .
} => {
    #### perform action 
    _:h         http:mthd           http_m:POST ;                 
                http:requestURI     ?uri ; 
                http:body           ?body .             ### QUESTION: react on non 3XX Responses

    #### set action state => done           ### QUESTION: valid? is property value overwritten or is a duplicate property added
    #### We should consider waiting for the receiving device to finish its task

    ## trueConditon !
    ?action     ibm:hasState        ibm:done .
} .

##### QUESTION: how does this rule start executing?? parallel
#2
{
        
    ?stage      ibm:hasState        ibm:active ;
                ibm:hasTask         ?task .
    ?task       ibm:hasAction       ?action .
    ?action     ibm:hasState        ibm:done ;
                ibm:hasNextAction   ?nextAction . ### NO NEXT ACTION -> 1 stage 1 request 
    ?nextAction ibm:hasState        ibm:open ;
                ibm:hasHttpRequest  ?request .
    ?request    http:mthd           http_m:POST ; 
                http:requestURI     ?uri ; 
                http:body           ?body .

} => {
    ### perform action 
    _:h http:mthd                   http_m:POST ;                 
        http:requestURI             ?uri ; 
        http:body                   ?body .              ### QUESTION: react on non 3XX Responses

    ### set action state => done
    ?action     ibm:hasState        ibm:done .
} .

#3
{

    ?stage      ibm:hasState            ibm:active ;
                ibm:hasTask             ?task ;
                ibm:hasMilestone        ?milestone .
    ?task       ibm:hasAction           ?action .
    ?action     ibm:hasState            ibm:done ;
                ibm:hasNextAction       rdf:nil .           #### QUESTION: is this valid for a missing next action (last item in row)
    ?milestone  ibm:hasPostCondition    ?pc .
} => {
    #### set stage state => done AND fulfill milestone's post conditions
    ?stage      ibm:hasState            ibm:done .
    ?pc         ibm:hasState            ibm:fulfilled .
} .

# check postconditions

#{
#    ?stage      ibm:hasMilestone        ?milestone .
#    ?milestone  ibm:hasPostCondition    ?sentry .
#    ?sentry     sparql-result:boolean   "true"^^xsd:boolean .
#} 
#=> 
#{ 
#    ?stage      ibm:hasState            ibm:done . 
#} .